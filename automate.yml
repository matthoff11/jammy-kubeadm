---

- name: Automate lab env for terraform
  gather_facts: true
  hosts: localhost
  become: true
  tasks:

    #- name: "Print all available facts."
    # debug:
    #   var: ansible_facts

    - name: "Fail when not 22.04."
      fail:
        msg: Wrong OS version.
      when: ansible_facts['lsb']['release'] != "22.04"

    - include_tasks: tasks/packages.yaml

    - name: "Load br_netfilter kernel module."
      modprobe:
        name: br_netfilter
        state: present

    - name: "Load overlay kernel module."
      modprobe:
        name: overlay
        state: present

    - name: "Check modules."
      shell:
        cmd: lsmod | grep br_netfilter && lsmod | grep overlay
      register: chkmod

    - debug:
        msg: "{{ chkmod.stdout }}"

    - name: "Set bridge-nf-call-iptables."
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1

    - name: "Set IPv6 bridge-nf-call-ip6tables."
      sysctl:
        name: net.bridge.bridge-nf-call-ip6tables
        value: 1

    - name: "Set ip_forward."
      sysctl:
        name: net.ipv4.ip_forward
        value: 1

    - name: "Apply sysctl params without reboot."
      shell:
        cmd: sysctl --system

    - name: "Check sysctl params."
      shell:
        cmd: sysctl net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward
      register: sysctl

    - debug:
        msg: "{{ sysctl.stdout }}"

    - name: "Create a directory for containerd config."
      file: path=/etc/containerd state=directory

    - name: "Create containerd config for k8s."
      shell:
        cmd: |
          containerd config default > /etc/containerd/config.toml
          ls -l /etc/containerd
      register: cdconfig

    - debug:
        msg: "{{ cdconfig.stdout }}"

    - name: "Register if system is using cgroupv2."
      shell:
        cmd: stat -fc %T /sys/fs/cgroup/
      register: cgroupv2

    - debug:
        msg: "{{ cgroupv2.stdout }}"

    - name: "Find and replace cgroup driver."
      when: cgroupv2.stdout == "cgroup2fs"
      replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        replace: 'SystemdCgroup = true'

    - name: "Restart containerd."
      shell:
        cmd: systemctl restart containerd
